Enter file contents hereMy Project Taught Me how to Grow Up
我的项目教会我如何去成长
For the past 10 years, Runa Bhattacharjee has been translating and working on localizing numerous Open Source projects - ranging from Desktop interfaces to Operating System tools and lots of things in between. She strongly believes that upstream repositories are the best places to submit any form of changes. She also holds a professional portfolio specializing in Localization, at Red Hat. Runa translates and maintains translations for Bengali (Indian version), but is al- ways happy to help anyone wanting to get started with localization.
在过去的10年里，Runa Bhattacharjee一直并致力于许多的开源项目（从接口到操作系统工具以及两者之间）的本土化。她始终相信上游的存贮库是提交各种形式变化最好的地方。她在红帽子也是在本地化的专家，Runa翻译并维护了Bengali（印度版本），而且总是乐于帮助任何想开始本土化的人。
Introduction
介绍
Burning the midnight oil has been a favorite form of rebellion by young people all over the world. Whether to read a book with a torchlight under the covers or to watch late night TV reruns or (amongst other things) to hang around on an IRC channel and tin- kering around with an itchy problem with a favorite open source project.
挑灯夜战作为一种叛逆方式已经流行于全世界的年轻人中。无论是在被窝里打着手电读书还是看深夜电视重播（除此之外的其他什么）或徘徊在聊天室或攻克一个棘手的喜爱的开源项目。
How it all began
这一切是如何开始的
That is how it all began for me. Let me ﬁrst write a bit about myself. When I got introduced to the local Linux Users Group in my city, I was in between jobs and studying for a masters degree. Very soon I was a contributor to a few localization projects and started translating (mostly) desktop interfaces. We used a few customized editors with integrated writing methods and fonts. The rendering engines had not matured well enough to display the script with zero errors on the interfaces, nonetheless we kept on translating. My focus was on the workﬂow that I had created for myself. I used to get the translatable content from the folks who knew how things work, translate it as best as I could, add in the comments to help the reviewers understand how I comprehended the text, ﬁlled in the necessary information for copyright and credits and sent them back to the coordinators.
这就是我如何开始这一切的。先让我写点关于我自己的。当我被介绍到我所在城市本地Linux用户协会时，我正处在工作和攻读硕士学位中。不久后我就为本土化工程做了点贡献并开始翻译桌面（主要）。我们使用一些整合了书写格式和字体的定制编辑工具。渲染工具还不能够在桌面呈现出一个没有错误的脚本，尽管如此我们仍坚持翻译。我关注的是我自己制作的workflow。我习惯于从知道事物如何运行的人们那里得到可翻译的内容，添加自己的看法来帮助读者理解我所理解的文档，加入必要的信息版权再把它们发送给协调者们。
How it was done
它是如何完成的
It was mostly a simple way of doing things. But most importantly it was my independent way of doing things. I took my own time to schedule when I would work on the translations. These would then be reviewed and returned to me for changes. Again, I would schedule them for completion as per how I could squeeze out some time from all the studying and other work that I was doing. When I did get down to work, I would sit through 9-10 straight hours mostly into the wee hours of the morning, feeling a high of accomplishment until the next assignments came through.
大部分都是比较简单的方式。但最重要的是我做事的独立性。当我要翻译时我会对我的时间制定计划表。而这些促使我改变。我为了完成它们，根据我能从学习和我做的其他工作中挤出的时间再次制定了时间表。当我真的开始工作的时候，我一般会连续9-10个小时坐在那里直到第二天凌晨，直到下一个任务前我都会感到很大的成就感。
What mattered
不足之处
What I did not know was that I played a signiﬁcant part in the larger scheme of things. Namely, release schedules. So, when I completed my 2 cents of the task and sent them over, I did not factor in a situation where they could be rendered useless because they were too late for the current release and too early for the next release (which would invariably contain a lot of changes that would require a rework). Besides these, I was oblivious to the fact how it all mattered to the entire release process – integration, packaging, interface testing, bug ﬁling, resolution
我不知道的是我在宏观的计划中担任了重要角色。也就是说，发布进度表。所以，当我完成了我两美分的任务并把它们发送出去时，我不会考虑它们能不能用除非因为对于当前的版本来说太早而对于下一个版本来说太早（这总是包含了很大的重做风险）。除此之外，我还忘记了整个发行过程—整合，包装，接口测试，bug修复，决议这一切都很重要的事实。
How it made me grow up
他如何使我成长
All these changed drastically when I moved into a more professional role. So suddenly I was doing the same thing but in a more structured order. I learned that the cavalier road-rolling that I had been used to, was not scalable when one had to juggle through 2-3 release schedules. It had to be meticulously planned to map with the project roadmaps. While working on translating a desktop interface, one had to check what the translation schedule was for the main project. The projected date to start working would be right after when all the original interface messages had been frozen. Translators could then work unhindered until the translation deadline, after which they would be marked as stable in the main repositories and eventually packages would be built. Along with these schedules, a couple of operating system distributions would align their schedules as well. So the translators had the additional responsibility of making sure that ||the pre-release versions of the operating system that would be carrying the desktop went through with some bits of testing ||to ensure that the translations made sense on the interface and did not contain errors.
所有这些在我进入一个专业人士角色后发生了很大的变化。所以我突然就用更严谨的流程做同样的事。我意识到我过去的照搬照做在评估2-3个发行进度表时并不可用。我不得不仔细地规划工程的进度计划。当去翻译一个桌面接口的时候，我们必须去确认翻译进度是符合主体工程的。开始工作的时间就在原始接口信息被冻结之后。翻译者之后便可以流畅地工作直到翻译期限，然后它们在主库中被标记为稳定并最终创建软件包。随着这些进度表，几个分布式操作系统也同样会调整它们的进度。所以翻译者有额外的责任去保证先前发布的带桌面的操作系统能运行一些测试程序以保证翻译作品在接口上有意义并且没有包含错误。
What I should have known
我早应该知道的
The transition was not easy. Suddenly there was a flood of information that I had to deal with and additional chores that I had to perform. From being a hobby and more importantly a stress-buster, suddenly it was serious business. Thinking in retrospect, I can say that it probably helped me understand the entire process because I had to learn it from the ground up. And armed with that knowledge I can analyze situations with a better understanding of all the effective facets. At the time when I started working on the Open Source project(s) of my interest, there were much fewer professionals who worked full time in this domain. Most of the volunteer contributors held day jobs elsewhere and saw these projects as a way to nurture the creative juices that had dried up in their routine tasks. So a number of newcomers were never mentored about how to plan out their projects professionally. They grew to be wonderfully skilled in what they were doing and eventually figured out how they would like to balance their work with the rest of the things they were doing.
转变并不容易。我突然之间就要处理洪水般的信息和完成额外的工作。从一个爱好到一个很大的包袱，最终成为正经的事业。回头想想，我大概可以说它帮助我理解了整个过程因为我不得不从最基本的学起。掌握这些知识后我可以带着对所有有效方面的更好理解去分析情况。当我凭着自己的兴趣在开源项目工作时，只有很少的专家全身心地投入到这个领域。大多数志愿者从其他提交一天的工作量，把这些工程看作是培养他们日常工作中枯竭的创造力。所以很多新员工没有怎样去专业地规划自己的工程的经验。他们逐渐熟练掌握了他们所做的事并最终明白如何调节他们剩下的工作。
Conclusion
总结
These days I mentor newcomers and one of the ﬁrst things that I let them know is how and in which part of the project they matter. Crafting an individual style of work is essential as it allows a person a comfortable space to work in, but an understanding of the organized structure that is accepted by their work imbibes the discipline that is required to hold in check chances of arbitrary caprice.
这些天我指导新员工的第一件事之一就是让他们知道工程的每部分是怎么样的及重要性。慢工出细活的工作方式是必要的因为它提供了一个人一个舒适的空间去工作，但是对理解工作 所需的团队协作包含了要求控制随意想法的机会的纪律。
